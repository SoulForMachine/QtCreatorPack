<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vsui="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0">

    <!--list view-->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBorderKey}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="0" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:VsBrushes.WindowTextKey}}" />
        <Setter Property="Height" Value="26"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="HeaderBorder" BorderThickness="0,0,1,1" Padding="20,0,0,0"
                                            Background="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBackgroundKey}}"
                                            BorderBrush="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBorderKey}}">

                            <ContentPresenter x:Name="HeaderContent" Margin="0,0,0,1" RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder" BorderThickness="0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="ContainerStyle"  TargetType="ListViewItem">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBackgroundKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowTextKey}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border CornerRadius="2" SnapsToDevicePixels="True"
                                        BorderThickness="{TemplateBinding     BorderThickness}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                        <Border Name="InnerBorder" CornerRadius="1"   BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                                <GridViewRowPresenter Grid.RowSpan="2" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBorderKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.HighlightKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.WindowKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <!--button-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsColors.ToolWindowBackgroundKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:VsColors.ToolWindowBackgroundKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Image Source="/QtCreatorPack;component/Resources/clear.png" Stretch="Fill" Width="16" Height="16" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarHoverKey}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarBorderKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarMouseDownBackgroundMiddleKey}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarBorderKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--text box-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.WindowKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:VsBrushes.ToolWindowBorderKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:VsBrushes.WindowTextKey}}"/>
    </Style>
    
    <!--label-->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarTextActiveKey}}"/>
    </Style>
    
    <!--progress bar-->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarToolBarBorderKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:VsBrushes.ActiveBorderKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:VsBrushes.HighlightKey}}"/>
    </Style>
    
    <!--toolbox command bar grid-->
    <Style x:Key="CommandBarGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:VsBrushes.CommandBarToolBarBorderKey}}"/>
    </Style>
</ResourceDictionary>
